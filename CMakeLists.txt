cmake_minimum_required(VERSION 2.6)

PROJECT(docgl CXX C)

OPTION(DOCGL_OPTION_MULTICONTEXT "MultiContext" OFF)
IF (DOCGL_OPTION_MULTICONTEXT)
  ADD_DEFINITIONS(-DGLEW_MX)
ENDIF (DOCGL_OPTION_MULTICONTEXT)

SET (CMAKE_BUILD_TYPE Debug)

SET(EXTERN_PATH ${docgl_SOURCE_DIR}/extern CACHE PATH "extern directory" FORCE)
MARK_AS_ADVANCED(EXTERN_PATH)

IF   (WIN32)
ELSE (WIN32)
  IF   (UNIX)
    IF   (APPLE)
    ELSE (APPLE)
      ADD_DEFINITIONS(-DLINUX)
      IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
        ADD_DEFINITIONS(-D_DEBUG)
      ENDIF (CMAKE_BUILD_TYPE STREQUAL "Debug")
    ENDIF(APPLE)
  ENDIF(UNIX)
ENDIF(WIN32)

IF (MSVC)
  OPTION(DOCGL_OPTION_DEBUG_COMPATIBILE_WITH_PUFIRY "Debug Purify compatibility" OFF)
ENDIF (MSVC)

IF (DOCGL_OPTION_DEBUG_COMPATIBILE_WITH_PUFIRY)
  #do not forgot to add /allow_setwindowshook to Purify Files Additional options.
  STRING(REPLACE "INCREMENTAL:YES" "INCREMENTAL:NO" replacementFlags ${CMAKE_EXE_LINKER_FLAGS_DEBUG})
  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "/INCREMENTAL:NO ${replacementFlags}")
  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /FIXED:NO")
  
  STRING(REPLACE "INCREMENTAL:YES" "INCREMENTAL:NO" replacementFlags ${CMAKE_MODULE_LINKER_FLAGS_DEBUG})
  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG "/INCREMENTAL:NO ${replacementFlags}")
  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} /FIXED:NO")
  
  STRING(REPLACE "/RTC1" "" replacementFlags ${CMAKE_CXX_FLAGS_DEBUG})
  SET(CMAKE_CXX_FLAGS_DEBUG "${replacementFlags}")
ENDIF (DOCGL_OPTION_DEBUG_COMPATIBILE_WITH_PUFIRY)

INCLUDE_DIRECTORIES(
  ${EXTERN_PATH}/include
)

IF   (WIN32)
  ADD_DEFINITIONS(-D_WIN32_WINNT=0x0501 -D_CRT_SECURE_NO_WARNINGS)

  IF (MSVC)
    # Set this to make visual studio create pdb files in release mode
    # SET (CMAKE_EXE_LINKER_FLAGS_RELEASE /DEBUG ${CMAKE_EXE_LINKER_FLAGS_RELEASE})
    # SET (CMAKE_SHARED_LINKER_FLAGS /DEBUG ${CMAKE_SHARED_LINKER_FLAGS})

    # Multi-threaded compilation on visual studio
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")

    IF (CMAKE_CL_64)
      ADD_DEFINITIONS(-D_WIN64)
      # SSE2 32/64bit floating point arithmetic instruction set replace x87 80bit one, and be implemented by default in X64.
    ELSE (CMAKE_CL_64)
      # activate SSE2 Instruction set on visual studio x86 (Intel Pentium 4 (2001) AMD Operon / AMD 64 (2003))
      # activate address over 2GO limits (app source code and libs must have correct pointer arithmetics)
      SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:SSE2")  
      SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LARGEADDRESSAWARE")
    ENDIF (CMAKE_CL_64)
  ELSE (MSVC)
    # MINGW CYGWIN ?
    ADD_DEFINITIONS(-DWINVER=0x0501)
  ENDIF (MSVC)
ENDIF (WIN32)
ADD_DEFINITIONS(-DGLEW_STATIC)


MACRO(SOURCE_SUB_GROUP ROOT_NAME SUB_NAME) # other args
  IF (WIN32)
    SOURCE_GROUP(${ROOT_NAME}\\${SUB_NAME} ${ARGN})
  ELSE (WIN32)
    SOURCE_GROUP(${ROOT_NAME}/${SUB_NAME} ${ARGN})
  ENDIF (WIN32)
ENDMACRO(SOURCE_SUB_GROUP)


MACRO(SOURCE_SUB_GROUP2 ROOT_NAME SUB_NAME SUB_NAME2) # other args
  IF (WIN32)
    SOURCE_GROUP(${ROOT_NAME}\\${SUB_NAME}\\${SUB_NAME2} ${ARGN})
  ELSE (WIN32)
    SOURCE_GROUP(${ROOT_NAME}/${SUB_NAME}/${SUB_NAME2} ${ARGN})
  ENDIF (WIN32)
ENDMACRO(SOURCE_SUB_GROUP2)

# build redistribuable zip
SET (CPACK_PACKAGE_NAME "docgl")
SET (CPACK_PACKAGE_VENDOR "d-labs.fr")
SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "docgl")
SET (CPACK_PACKAGE_VERSION_MAJOR "1")
SET (CPACK_PACKAGE_VERSION_MINOR "0")
SET (CPACK_GENERATOR "ZIP")
INCLUDE(CPack)

SET(GLEW_SOURCES
  extern/src/glew.c
)


SET(DOCGL_SOURCES
  Docgl.h
  Docwgl.h
)

SET(MAIN_SAMPLES_SOURCES
#  Bounce.cpp
  Main.cpp
  SuperFormula.cpp
  Tools.h  
)

SET(DOCGL_SAMPLES_SOURCES
  ${DOCGL_SOURCES}
  ${GLEW_SOURCES}
  ${MAIN_SAMPLES_SOURCES}
)

SOURCE_GROUP(Sample FILES ${MAIN_SAMPLES_SOURCES})
SOURCE_GROUP(Docgl FILES ${DOCGL_SOURCES})
SOURCE_GROUP(Glew FILES ${GLEW_SOURCES})


MACRO(ADD_APPLICATION NAME LABEL) #SOURCES
  INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}
	${Smode_SOURCE_DIR}/src
  )

  IF(WIN32)
    ADD_EXECUTABLE(${NAME} ${ARGN}
  )  
  ELSE(WIN32)
    IF(UNIX)
      IF(APPLE)
	  SET(MACOSX_BUNDLE_INFO_STRING ${LABEL})
	  SET(MACOSX_BUNDLE_ICON_FILE "")
	  SET(MACOSX_BUNDLE_GUI_IDENTIFIER "")
	  SET(MACOSX_BUNDLE_LONG_VERSION_STRING "")
	  SET(MACOSX_BUNDLE_BUNDLE_NAME "")
	  SET(MACOSX_BUNDLE_SHORT_VERSION_STRING "")
	  SET(MACOSX_BUNDLE_BUNDLE_VERSION "")
	  SET(MACOSX_BUNDLE_COPYRIGHT "D-Labs")

	  ADD_EXECUTABLE(${NAME} MACOSX_BUNDLE
		  ${ARGN}
	    )
    ELSE(APPLE)
	    ADD_EXECUTABLE(${NAME}
		${ARGN}
	      )  
      ENDIF(APPLE)
    ENDIF(UNIX)
  ENDIF(WIN32)
  SET_TARGET_PROPERTIES(${NAME} PROPERTIES
    PROJECT_LABEL ${LABEL} # todo: string concat "EXE " + ${LABEL}
  )
  TARGET_LINK_LIBRARIES(${NAME} opengl32)

ENDMACRO(ADD_APPLICATION)

SET (WIN32_EXECUTABLE FALSE)

ADD_APPLICATION(docglSample "docgl" ${DOCGL_SAMPLES_SOURCES})

INSTALL(TARGETS docglSample DESTINATION bin)
